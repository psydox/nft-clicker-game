{"version":3,"sources":["components/Btc.js","context/Context.js","components/Clicker.js","components/ItemBought.js","components/Items.js","components/Score.js","components/Item.js","components/Store.js","components/Wrapper.js","context/ContextProvider.js","App.js","index.js"],"names":["Model","props","group","useRef","btcRef","React","useGLTF","nodes","materials","useFrame","clock","current","rotation","z","getElapsedTime","style","innerWidth","ref","dispose","geometry","Cylinder","material","position","scale","preload","ClickerContext","createContext","Clicker","useContext","incrementScore","state","reward_per_click","reward_per_second","className","toFixed","resize","OrbitControls","enablePan","enableZoom","enableRotate","intensity","color","fallback","onClick","ItemBought","name","reward_per_sec","amount","Items","items","map","item","i","Score","score","fiat_score","Item","inc_per_click","inc_per_sec","price","id","img","buyItem","disabled","Store","Wrapper","timer","gameLoop","setTimeout","useEffect","clearTimeout","children","INITIAL_BTC","BITCOIN_PRICE","ClickerContextProvider","newScore","setState","improveRewardPerClick","newRewardPerClick","improveRewardPerSecond","newRewardPerSecond","itemId","newItems","duplicateItem","find","push","console","log","Provider","value","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAQe,SAASA,EAAT,GAA8B,IAAVC,EAAS,oBACpCC,EAAQC,mBACRC,EAASC,IAAMF,SACrB,EAA6BG,YAAQ,aAA7BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAMf,OAJAC,aAAS,YAAc,IAAZC,EAAW,EAAXA,MACTN,EAAOO,QAAQC,SAASC,EAAIH,EAAMI,oBAIlC,+CAAOC,MAAO,CAACC,WAAY,IAAKC,IAAKf,GAAWD,GAAhD,IAAuDiB,QAAS,KAAhE,SACE,sBACED,IAAKb,EACLe,SAAUZ,EAAMa,SAASD,SACzBE,SAAUb,EAAU,gBACpBc,SAAU,CAAC,EAAG,EAAG,GACjBV,SAAU,CAAC,KAAM,IAAM,GACvBW,MAAO,CAAC,IAAK,IAAM,UAM3BjB,IAAQkB,QAAQ,aC7BhB,IAEeC,EAFQpB,IAAMqB,gBCKd,SAASC,IACtB,MAAkCC,qBAAWH,GAArCI,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,MAChBC,EAAwCD,EAAxCC,iBAAkBC,EAAsBF,EAAtBE,kBAE1B,OACE,sBAAKC,UAAU,kBAAf,UACE,oBAAGA,UAAU,iBAAb,6BACmBD,EAAkBE,QAAQ,MAE7C,oBAAGD,UAAU,mBAAb,4BACkBF,EAAiBG,QAAQ,MAE3C,eAAC,IAAD,CAAQC,QAAQ,EAAOF,UAAU,aAAjC,UACE,cAACG,EAAA,EAAD,CAAeC,WAAW,EAAMC,YAAY,EAAMC,cAAc,IAChE,8BAAcC,UAAW,KACzB,kCAAkBC,MAAM,MAAMnB,SAAU,CAAC,EAAG,EAAG,KAC/C,cAAC,WAAD,CAAUoB,SAAU,KAApB,SACE,cAAC1C,EAAD,CACE2C,QAAS,WACPd,EAAeE,cCxBd,SAASa,EAAW3C,GACjC,IAAO4C,EAAgC5C,EAAhC4C,KAAMC,EAA0B7C,EAA1B6C,eAAgBC,EAAU9C,EAAV8C,OAE7B,OACE,sBAAKd,UAAU,wBAAf,UACI,gCACI,6BAAKY,IACL,8BAAIC,EAAeZ,QAAQ,GAA3B,qBAGJ,mCAAMa,QCRC,SAASC,IACtB,IACQC,EADUrB,qBAAWH,GAArBK,MACAmB,MAER,OACE,qBAAKhB,UAAU,QAAf,SACGgB,EAAMC,KAAI,SAACC,EAAMC,GAAP,OACT,cAACR,EAAD,CAAYC,KAAMM,EAAKN,KAAMC,eAAgBK,EAAKnB,kBAAmBe,OAAQI,EAAKJ,cCP3E,SAASM,IACpB,IAAOvB,EAASF,qBAAWH,GAApBK,MACAwB,EAAqBxB,EAArBwB,MAAOC,EAAczB,EAAdyB,WAEd,OACI,sBAAKtB,UAAU,QAAf,UACI,8BAAIqB,EAAMpB,QAAQ,GAAlB,UACA,+BAAKqB,EAAWrB,QAAQ,GAAxB,UCRG,SAASsB,EAAKvD,GAC3B,IAAQ4C,EAAqD5C,EAArD4C,KAAMY,EAA+CxD,EAA/CwD,cAAeC,EAAgCzD,EAAhCyD,YAAaC,EAAmB1D,EAAnB0D,MAAOC,EAAY3D,EAAZ2D,GACjD,GAD6D3D,EAAR4D,IAC1BjC,qBAAWH,IAA9BqC,EAAR,EAAQA,QACAR,EADR,EAAiBxB,MACTwB,MAER,OACE,sBAAKrB,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,eACf,sBAAKA,UAAU,YAAf,UACI,6BAAKY,IACL,kCAAKa,EAAL,qBACA,kCAAKD,EAAL,0BAGN,sBAAKxB,UAAU,WAAf,UACI,8BAAI0B,EAAMzB,QAAQ,GAAlB,UACA,wBAAQ6B,SAAUJ,EAAQL,EAAsBX,QAAS,WAAOmB,EAAQF,EAAIf,EAAMa,EAAaC,IAA/F,uBCjBK,SAASK,EAAM/D,GAC1B,OACI,sBAAKgC,UAAU,QAAf,UACI,cAACuB,EAAD,CAAMX,KAAK,mBAAmBe,GAAI,EAAGF,YAAa,KAAYD,cAAc,MAAME,MAAO,OACzF,cAACH,EAAD,CAAMX,KAAK,uBAAuBe,GAAI,EAAGF,YAAa,KAAYD,cAAc,MAAME,MAAO,QAC7F,cAACH,EAAD,CAAMX,KAAK,aAAae,GAAI,EAAGF,YAAa,KAAYD,cAAc,MAAME,MAAO,UCLhF,SAASM,EAAQhE,GAC9B,IAGIiE,EAHJ,EAAkCtC,qBAAWH,GAArCK,EAAR,EAAQA,MAAOD,EAAf,EAAeA,eACPG,EAAsBF,EAAtBE,kBAIFmC,EAAW,SAAXA,IACJD,EAAQE,YAAW,WACjBvC,EAAeG,EAAoB,GAGnCmC,MACC,MAaL,OAVAE,qBAAU,WAOR,OANGH,GACCI,aAAaJ,GAGjBC,IAEO,kBAAMG,aAAaJ,MACzB,CAAClC,IAEG,qBAAKC,UAAU,gBAAf,SAAgChC,EAAMsE,W,wCCzBzCC,EAAc,KACdC,EAAgB,MAEhBC,E,4MACJ5C,MAAQ,CACNwB,MAAOkB,EACPzC,iBAAkB,KAClBC,kBAAmB,EACnBuB,WAAYiB,SACZvB,MAAO,I,EAGTpB,eAAiB,SAACkB,GAChB,IAAI4B,EAAW,EAAK7C,MAAMwB,MAAQP,EAElC,EAAK6B,SAAS,CACZtB,MAAOqB,EACPpB,WAAYoB,EAAWF,K,EAI3BI,sBAAwB,SAAC9B,GACvB,IAAI+B,EAAoB,EAAKhD,MAAMC,iBAAmBgB,EAEtD,EAAK6B,SAAS,CACV7C,iBAAkB+C,K,EAIxBC,uBAAyB,SAAChC,GACxB,IAAIiC,EAAqB,EAAKlD,MAAME,kBAAoBe,EAExD,EAAK6B,SAAS,CACV5C,kBAAmBgD,K,EAIzBlB,QAAU,SAACmB,EAAQpC,EAAMb,EAAmB2B,GAC1C,KAAGA,EAAQ,EAAK7B,MAAMwB,OAAtB,CAIA,IAAI4B,EAAQ,YAAO,EAAKpD,MAAMmB,OAE1B+B,EAAqB,EAAKlD,MAAME,kBAAoBA,EAGpDmD,EAAgBD,EAASE,MAAK,SAAAjC,GAAI,OAAIA,EAAKS,KAAOqB,KAEnDE,GACDA,EAAcpC,SACdoC,EAAcnD,mBAAqBA,GAEnCkD,EAASG,KAAK,CACZzB,GAAIqB,EACJpC,KAAMA,EACNE,OAAQ,EACRf,kBAAmBA,IAIvB,IAAI2C,EAAW,EAAK7C,MAAMwB,MAAQK,EAElC,EAAKiB,SAAS,CACZ3B,MAAOiC,EACPlD,kBAAmBgD,EACnB1B,MAAOqB,IAGTW,QAAQC,IAAI,EAAKzD,S,4CAGnB,WACE,OACE,cAAC,EAAe0D,SAAhB,CACEC,MAAO,CACL3D,MAAO4D,KAAK5D,MACZD,eAAgB6D,KAAK7D,eACrBgD,sBAAuBa,KAAKb,sBAC5BE,uBAAwBW,KAAKX,uBAC7BjB,QAAS4B,KAAK5B,SANlB,SASG4B,KAAKzF,MAAMsE,e,GAhFiBoB,aAsFtBjB,ICpEAkB,MAff,WACE,OACE,cAAC,EAAD,UACE,eAAC3B,EAAD,WACE,cAACtC,EAAD,IACA,cAACqB,EAAD,IACA,cAACgB,EAAD,IACA,cAACX,EAAD,IACA,qBAAKpB,UAAU,cACf,qBAAKA,UAAU,sBCZvB4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.292bb8ba.chunk.js","sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\n*/\n\nimport React, { useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { useFrame } from '@react-three/fiber'\n\nexport default function Model({ ...props }) {\n  const group = useRef()\n  const btcRef = React.useRef()\n  const { nodes, materials } = useGLTF('/btc.gltf')\n\n  useFrame(({clock}) => {\n    btcRef.current.rotation.z = clock.getElapsedTime();\n  });\n\n  return (\n    <group style={{innerWidth: 10}} ref={group} {...props} dispose={null}>\n      <mesh\n        ref={btcRef}\n        geometry={nodes.Cylinder.geometry}\n        material={materials['Material.001']}\n        position={[0, 0, 0]}\n        rotation={[1.65, 0.25, 0]}\n        scale={[2.5, 0.25, 2.5]}\n      />\n    </group>\n  )\n}\n\nuseGLTF.preload('/btc.gltf')\n","import React, { Component } from 'react'\r\n\r\nconst ClickerContext = React.createContext();\r\n\r\nexport default ClickerContext;","import React, { useContext, Suspense } from 'react';\r\nimport { Canvas, useFrame } from '@react-three/fiber';\r\nimport {OrbitControls} from '@react-three/drei';\r\nimport Model from './Btc';\r\nimport ClickerContext from '../context/Context';\r\nimport '../App.css';\r\n\r\nexport default function Clicker() {\r\n  const { incrementScore, state } = useContext(ClickerContext);\r\n  const { reward_per_click, reward_per_second } = state;\r\n\r\n  return (\r\n    <div className='clicker-section'>\r\n      <p className='reward-per-sec'>\r\n        BTC per second: {reward_per_second.toFixed(8)}\r\n      </p>\r\n      <p className='reward-per-click'>\r\n        BTC per click: {reward_per_click.toFixed(8)}\r\n      </p>\r\n      <Canvas resize={false} className='btc-canvas'>\r\n        <OrbitControls enablePan={true} enableZoom={true} enableRotate={true} />\r\n        <ambientLight intensity={0.6} />\r\n        <directionalLight color='red' position={[0, 0, 4]} />\r\n        <Suspense fallback={null}>\r\n          <Model\r\n            onClick={() => {\r\n              incrementScore(reward_per_click);\r\n            }}\r\n          />\r\n        </Suspense>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\nexport default function ItemBought(props) {\r\n  const {name, reward_per_sec, amount} = props;\r\n\r\n  return (\r\n    <div className=\"bought-item-container\">\r\n        <div>\r\n            <h5>{name}</h5>\r\n            <p>{reward_per_sec.toFixed(8)} BTC per sec</p>\r\n        </div>\r\n\r\n        <h2>X{amount}</h2>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport ClickerContext from '../context/Context';\r\nimport ItemBought from './ItemBought';\r\n\r\nexport default function Items() {\r\n  const { state } = useContext(ClickerContext);\r\n  const { items } = state;\r\n\r\n  return (\r\n    <div className='items'>\r\n      {items.map((item, i) => (\r\n        <ItemBought name={item.name} reward_per_sec={item.reward_per_second} amount={item.amount}/>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, {useContext} from 'react'\r\nimport ClickerContext from '../context/Context';\r\n\r\n\r\nexport default function Score() {\r\n    const {state} = useContext(ClickerContext);\r\n    const {score, fiat_score} = state;\r\n\r\n    return (\r\n        <div className=\"score\">\r\n            <p>{score.toFixed(8)} BTC</p>\r\n            <h6>{fiat_score.toFixed(5)}$</h6>   \r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react';\r\nimport ClickerContext from '../context/Context';\r\n\r\nexport default function Item(props) {\r\n  const { name, inc_per_click, inc_per_sec, price, id, img } = props;\r\n  const { buyItem, state } = useContext(ClickerContext);\r\n  const { score } = state;\r\n\r\n  return (\r\n    <div className='item'>\r\n      <div className='item-details'>\r\n        <div className='item-image'></div>\r\n        <div className='item-info'>\r\n            <h4>{name}</h4>\r\n            <p>+{inc_per_sec} BTC per second</p>\r\n            <p>+{inc_per_click} BTC per click</p>\r\n        </div>\r\n      </div>\r\n      <div className='item-buy'>\r\n          <p>{price.toFixed(6)} BTC</p>\r\n          <button disabled={price > score ? true : false} onClick={() => {buyItem(id, name, inc_per_sec, price)}}>BUY</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Item from './Item'\r\n\r\nexport default function Store(props) {\r\n    return (\r\n        <div className=\"store\">\r\n            <Item name=\"Pneumatic Hammer\" id={1} inc_per_sec={0.00000100} inc_per_click=\"N/A\" price={0.0004}/>\r\n            <Item name=\"NVIDIA Graphics Card\" id={2} inc_per_sec={0.00000200} inc_per_click=\"N/A\" price={0.0104}/>\r\n            <Item name=\"ASIC Miner\" id={3} inc_per_sec={0.00001000} inc_per_click=\"N/A\" price={0.104}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport ClickerContext from '../context/Context';\r\n\r\nexport default function Wrapper(props) {\r\n  const { state, incrementScore } = useContext(ClickerContext);\r\n  const { reward_per_second } = state;\r\n\r\n  let timer;\r\n\r\n  const gameLoop = () => {\r\n    timer = setTimeout(() => {\r\n      incrementScore(reward_per_second / 2);\r\n\r\n\r\n      gameLoop();\r\n    }, 500);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(timer){\r\n        clearTimeout(timer);\r\n    }\r\n\r\n    gameLoop();\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [reward_per_second]);\r\n\r\n  return <div className='app-container'>{props.children}</div>;\r\n}\r\n","import { Component } from 'react';\r\nimport ClickerContext from './Context';\r\n\r\nconst INITIAL_BTC = 0.00000001;\r\nconst BITCOIN_PRICE = 47397;\r\n\r\nclass ClickerContextProvider extends Component {\r\n  state = {\r\n    score: INITIAL_BTC,\r\n    reward_per_click: 0.000001,\r\n    reward_per_second: 0.000000,\r\n    fiat_score: INITIAL_BTC * BITCOIN_PRICE,\r\n    items: []\r\n  };\r\n\r\n  incrementScore = (amount) => {\r\n    let newScore = this.state.score + amount\r\n\r\n    this.setState({\r\n      score: newScore,\r\n      fiat_score: newScore * BITCOIN_PRICE\r\n    });\r\n  }\r\n\r\n  improveRewardPerClick = (amount) => {\r\n    let newRewardPerClick = this.state.reward_per_click + amount;\r\n\r\n    this.setState({\r\n        reward_per_click: newRewardPerClick\r\n    })\r\n  }\r\n\r\n  improveRewardPerSecond = (amount) => {\r\n    let newRewardPerSecond = this.state.reward_per_second + amount;\r\n\r\n    this.setState({\r\n        reward_per_second: newRewardPerSecond\r\n    })\r\n  }\r\n\r\n  buyItem = (itemId, name, reward_per_second, price) => {\r\n    if(price > this.state.score){\r\n      return;\r\n    }\r\n\r\n    let newItems = [...this.state.items];\r\n\r\n    let newRewardPerSecond = this.state.reward_per_second + reward_per_second;\r\n    \r\n    //Check if item is already on the list\r\n    let duplicateItem = newItems.find(item => item.id === itemId);\r\n\r\n    if(duplicateItem){\r\n      duplicateItem.amount++;\r\n      duplicateItem.reward_per_second += reward_per_second;\r\n    } else {\r\n      newItems.push({\r\n        id: itemId,\r\n        name: name,\r\n        amount: 1,\r\n        reward_per_second: reward_per_second\r\n      })\r\n    }\r\n\r\n    let newScore = this.state.score - price;\r\n\r\n    this.setState({\r\n      items: newItems,\r\n      reward_per_second: newRewardPerSecond,\r\n      score: newScore\r\n    })\r\n\r\n    console.log(this.state)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ClickerContext.Provider\r\n        value={{\r\n          state: this.state,\r\n          incrementScore: this.incrementScore,\r\n          improveRewardPerClick: this.improveRewardPerClick,\r\n          improveRewardPerSecond: this.improveRewardPerSecond,\r\n          buyItem: this.buyItem\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ClickerContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClickerContextProvider;\r\n","import { useEffect } from 'react';\nimport './App.css';\nimport Clicker from './components/Clicker';\nimport Items from './components/Items';\nimport Score from './components/Score';\nimport Store from './components/Store';\nimport Wrapper from './components/Wrapper';\nimport ClickerContextProvider from './context/ContextProvider';\n\nfunction App() {\n  return (\n    <ClickerContextProvider>\n      <Wrapper>\n        <Clicker />\n        <Items />\n        <Store />\n        <Score />\n        <div className='nft-items'></div>\n        <div className='level-items'></div>\n      </Wrapper>\n    </ClickerContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}