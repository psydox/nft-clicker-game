/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { useSpring, animated, config } from '@react-spring/three';
import {Howl, Howler} from 'howler';

export default function Model({ ...props }) {
  const [active, setActive] = useState(false);
  const group = useRef();
  const btcRef = React.useRef();
  const { nodes, materials } = useGLTF('/nft-clicker-game/btc.gltf');
  const { scale } = useSpring({
    scale: active ? [2.25, 0.25, 2.25] : [2.5, 0.25, 2.5],
    config: config.wobbly,
  });

  useFrame(({ clock }) => {
    btcRef.current.rotation.z = clock.getElapsedTime() / 2;
  });

  const animateBtcClick = () => {
    var coinSound = new Howl({
      src: ['/nft-clicker-game/coin.mp3'],
      volume: 0.5
    })
  
    coinSound.play();
    setActive(!active);
  }

  return (
    <group style={{ innerWidth: 10 }} ref={group} {...props} dispose={null}>
      <animated.mesh
        onClick={() => {
          animateBtcClick();
        }}
          
        ref={btcRef}
        geometry={nodes.Cylinder.geometry}
        material={materials['Material.001']}
        position={[0, 0, 0]}
        rotation={[1.65, 0.25, 0]}
        scale={scale}
      />
    </group>
  );
}

useGLTF.preload('/btc.gltf');
