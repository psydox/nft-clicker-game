/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export default function Model({ ...props }) {
  const group = useRef()
  const btcRef = React.useRef()
  const { nodes, materials } = useGLTF('/btc.gltf')

  useFrame(({clock}) => {
    btcRef.current.rotation.z = clock.getElapsedTime();
  });

  return (
    <group style={{innerWidth: 10}} ref={group} {...props} dispose={null}>
      <mesh
        ref={btcRef}
        geometry={nodes.Cylinder.geometry}
        material={materials['Material.001']}
        position={[0, 0, 0]}
        rotation={[1.65, 0.25, 0]}
        scale={[2.5, 0.25, 2.5]}
      />
    </group>
  )
}

useGLTF.preload('/btc.gltf')
